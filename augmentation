import os
import random
from scipy import ndarray

#image processing
import skimage as sk
from skimage import transform
from skimage import img_as_ubyte
from skimage import util
from skimage import io

def random_rotation(image_Array: ndarray) :
    #pick a random degree of raotation
    random_degree = random.uniform(-25,25)
    return sk.transform.rotate(image_Array, random_degree)

def random_noise(image_Array: ndarray) :
    #add random noise to image
    return sk.util. random_noise(image_Array)

def horizontal_flip(image_Array: ndarray) :
    #flipping array of pixels
    return image_Array[:, ::-1]

#dictionary of transformations
available_transformations = {
    'rotate': random_rotation,
    'noise': random_noise,
    'horizontal_flip': horizontal_flip
}

folder_path = 'source/'
num_files_desired = 60

#find files paths
images = [
    os.path.join(folder_path, f) 
    for f in os.listdir(folder_path)
    if os.path.isfile(os.path.join(folder_path, f))
]

num_generated_files = 0
while num_generated_files <= num_files_desired:
    #random image from the folder
    image_path = random.choice(images)
    #read it as an 2D array of pixels
    image_to_transform = sk.io.imread(image_path)
    #random num of transformation to apply
    num_transform_to_apply = random.randint(1, len(available_transformations))

    num_tranform = 0
    transformed_image = None

    while num_tranform <= num_transform_to_apply:
        #random transform to apply for a single image
        key = random.choice(list(available_transformations))
        transformed_image = available_transformations[key] (image_to_transform)
        num_tranform += 1

        new_file_path = '%s/Augmented_image_%s.jpg' % (folder_path, num_generated_files)

        #write image to the disk
        io.imsave(new_file_path, img_as_ubyte(transformed_image))
        num_generated_files += 1
